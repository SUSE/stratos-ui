
---
platform: linux
inputs:
- name: stratos
outputs:
- name: image-tag
image_resource:
  type: docker-image
  source:
   repository:  splatform/ci-stratos-concourse
   tag: "latest"

run:
  path: bash
  args:
    - -exc
    - |
      echo "Generate tag files started..."

      cd stratos

      echo "Getting package.json version..."

      VERSION=$(cat package.json | grep version | grep -Po "([0-9\.]?)*")

      echo "Got version $VERSION from package.json."
      echo "Getting latest git tag..."

      LATEST_TAG=$VERSION-$(git log -1 --format="%h")

      echo "Got $LATEST_TAG as the latest git tag."

      if [ ! -z ${TAG_SUFFIX} ]; then
        if [ "${TAG_SUFFIX}" != "null" ]; then
          echo "Adding tag suffix '$TAG_SUFFIX' to the latest tag."
          LATEST_TAG=${LATEST_TAG}-${TAG_SUFFIX}
          echo "The latest tag is now $LATEST_TAG."
        fi
      fi
      echo "Running store-git-metadata.sh..."

      ./build/store-git-metadata.sh

      echo "Finished running store-git-metadata.sh."
      echo "Creating ui-build-arg from the output of store-git-metadata.sh..."

      cat .stratos-git-metadata.json | tr -d '\n' > ../image-tag/ui-build-args
      echo "Created ui-build-args."

      echo "Creating v2-alpha-tag, v2-version and build-args..."

      cd ../image-tag      
      echo "$LATEST_TAG" > v2-alpha-tag
      echo "$VERSION" > v2-version
      FILENAME="release-${LATEST_TAG}"
      cat > build-args << EOF
      { "stratos_version": "${LATEST_TAG}" }
      EOF

      echo "Created v2-alpha-tag, v2-version and build-args."

      echo "Contens of build-args:"
      cat build-args

      echo "Contens of ui-build-args:"
      cat ui-build-args

      echo "Contens of v2-alpha-tag:"
      cat v2-alpha-tag
      
      echo "Creating tag file tar..."
      tar -cf ${FILENAME}.tar v2-alpha-tag v2-version build-args ui-build-args
      echo "Created tag file tar as ${FILENAME}.tar"
      echo "Generate tag files complete!"
