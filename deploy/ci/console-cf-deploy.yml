resource_types:
  - name: email
    type: docker-image
    source:
      repository: pcfseceng/email-resource
resources:
- name: stratos-ui
  type: git
  source:
    branch: {{stratos-ui-branch}}
    private_key: {{github-private-key}}
    uri: git@github.com:SUSE/stratos-ui.git
# - name: after-midnight
#   type: time
#   source:
#     start: 12:00 AM
#     stop: 2:00 AM
#     location: UTC
# - name: send-email
#   type: email
#   source:
#     smtp:
#       host: {{email-server}}
#       port: {{email-port}}
#       username: {{email-username}}
#       password: {{email-password}}
#     from: {{email-from}}
#     to: [ ]
jobs:
- name: vagrant-deploy
  plan:
  - get: stratos-ui
  # - get: after-midnight
  - do:
    - task: deploy
      timeout: 2h
      file:  stratos-ui/deploy/ci/tasks/cf-deploy/deploy-vagrant.yml
      params:
       SSH_PRIVATE_KEY: {{ssh-private-key}}
       CF_DEPLOY_SYSTEM_USER: {{cf-deploy-system-user}}
       CF_DEPLOY_SYSTEM: {{cf-deploy-system}}
      # on_failure:
      #   put: send-email
      #   params:
      #     subject_text: "BOSH Deploy ${BUILD_PIPELINE_NAME}/${BUILD_JOB_NAME}/${BUILD_NAME} failed!"
      #     body_text: "BOSH Deploy build was failed: ${ATC_EXTERNAL_URL}/teams/main/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}"
      # on_success:
      #   put: send-email
      #   params:
      #     subject_text: "BOSH Deploy ${BUILD_PIPELINE_NAME}/${BUILD_JOB_NAME}/${BUILD_NAME} successful"
      #     body_text: "BOSH Deploy build was successful: ${ATC_EXTERNAL_URL}/teams/main/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}"
 
- name: deploy-app
  plan:
  - get: stratos-ui
    passed: [vagrant-deploy]
    trigger: true
  - do:
    - task: deploy-app
      timeout: 2h
      file:  stratos-ui/deploy/ci/tasks/cf-deploy/cf-push-app.yml
      params:
       CF_API_URL: {{cf-api-url}}
       CF_USER: {{cf-admin-user}}
       CF_PASSWORD: {{cf-admin-password}}
       CF_ORG: {{cf-org}}
       CF_SPACE: {{cf-space}}
       APP_NAME: "console-std"
      # on_failure:
      #   put: send-email
      #   params:
      #     subject_text: "BOSH Deploy ${BUILD_PIPELINE_NAME}/${BUILD_JOB_NAME}/${BUILD_NAME} failed!"
      #     body_text: "BOSH Deploy build was failed: ${ATC_EXTERNAL_URL}/teams/main/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}"
      # on_success:
      #   put: send-email
      #   params:
      #     subject_text: "BOSH Deploy ${BUILD_PIPELINE_NAME}/${BUILD_JOB_NAME}/${BUILD_NAME} successful"
      #     body_text: "BOSH Deploy build was successful: ${ATC_EXTERNAL_URL}/teams/main/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}"
 
- name: run-e2e
  plan:
  - get: stratos-ui
    passed: [deploy-app]
    trigger: true
  - do:
    - task: run-e2e
      timeout: 2h
      file:  stratos-ui/deploy/ci/tasks/cf-deploy/cf-run-e2e.yml
      params:
       UAA_ADMIN_PASSWORD: {{uaa-admin-password}}
       UAA_ADMIN_USERNAME: {{uaa-admin-username}}
       UAA_CLIENT_ID: {{uaa-client-id}}
       UAA_URL: {{uaa-url}}
       CF_LOCATION: {{cf-location}}
       CF_ADMIN_USER: {{cf-admin-user}}
       CF_ADMIN_PASSWORD: {{cf-admin-password}}
       CF_E2E_USER: {{cf-e2e-user}}
       CF_E2E_USER_PASSWORD: {{cf-e2e-user-password}}
       CONSOLE_ADMIN_USER: {{console-admin-user}}
       CONSOLE_ADMIN_PASSWORD: {{console-admin-password}}
       CONSOLE_USER_USER: {{console-user-user}}
       CONSOLE_USER_PASSWORD: {{console-user-password}}
       GITHUB_TOKEN: {{github-access-token}}
       CONSOLE_ADDRESS: "console-std.cf-dev.io"
      # on_failure:
      #   put: send-email
      #   params:
      #     subject_text: "BOSH Deploy ${BUILD_PIPELINE_NAME}/${BUILD_JOB_NAME}/${BUILD_NAME} failed!"
      #     body_text: "BOSH Deploy build was failed: ${ATC_EXTERNAL_URL}/teams/main/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}"
      # on_success:
      #   put: send-email
      #   params:
      #     subject_text: "BOSH Deploy ${BUILD_PIPELINE_NAME}/${BUILD_JOB_NAME}/${BUILD_NAME} successful"
      #     body_text: "BOSH Deploy build was successful: ${ATC_EXTERNAL_URL}/teams/main/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}"
 
- name: remove-app
  plan:
  - get: stratos-ui
    passed: [run-e2e]
    trigger: true
  - do:
    - task: remove-app
      timeout: 2h
      file:  stratos-ui/deploy/ci/tasks/cf-deploy/cf-delete-app.yml
      params:
       CF_API_URL: {{cf-api-url}}
       CF_USER: {{cf-admin-user}}
       CF_PASSWORD: {{cf-admin-password}}
       CF_ORG: {{cf-org}}
       CF_SPACE: {{cf-space}}
       APP_NAME: "console-std"

- name: deploy-app-with-db
  plan:
  - get: stratos-ui
    passed: [vagrant-deploy]
    trigger: true
  - do:
    - task: deploy-app-with-db
      timeout: 2h
      file:  stratos-ui/deploy/ci/tasks/cf-deploy/cf-push-app.yml
      params:
       CF_API_URL: {{cf-api-url}}
       CF_USER: {{cf-admin-user}}
       CF_PASSWORD: {{cf-admin-password}}
       CF_ORG: {{cf-org}}
       CF_SPACE: {{cf-space}}
       APP_NAME: "console-db"
       CREATE_DB: "true"
      # on_failure:
      #   put: send-email
      #   params:
      #     subject_text: "BOSH Deploy ${BUILD_PIPELINE_NAME}/${BUILD_JOB_NAME}/${BUILD_NAME} failed!"
      #     body_text: "BOSH Deploy build was failed: ${ATC_EXTERNAL_URL}/teams/main/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}"
      # on_success:
      #   put: send-email
      #   params:
      #     subject_text: "BOSH Deploy ${BUILD_PIPELINE_NAME}/${BUILD_JOB_NAME}/${BUILD_NAME} successful"
      #     body_text: "BOSH Deploy build was successful: ${ATC_EXTERNAL_URL}/teams/main/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}"
 
 
- name: run-e2e-on-db
  plan:
  - get: stratos-ui
    passed: [deploy-app-with-db]
    trigger: true
  - do:
    - task: run-e2e-on-db
      timeout: 2h
      file:  stratos-ui/deploy/ci/tasks/cf-deploy/cf-run-e2e.yml
      params:
       UAA_ADMIN_PASSWORD: {{uaa-admin-password}}
       UAA_ADMIN_USERNAME: {{uaa-admin-username}}
       UAA_CLIENT_ID: {{uaa-client-id}}
       UAA_URL: {{uaa-url}}
       CF_LOCATION: {{cf-location}}
       CF_ADMIN_USER: {{cf-admin-user}}
       CF_ADMIN_PASSWORD: {{cf-admin-password}}
       CF_E2E_USER: {{cf-e2e-user}}
       CF_E2E_USER_PASSWORD: {{cf-e2e-user-password}}
       CONSOLE_ADMIN_USER: {{console-admin-user}}
       CONSOLE_ADMIN_PASSWORD: {{console-admin-password}}
       CONSOLE_USER_USER: {{console-user-user}}
       CONSOLE_USER_PASSWORD: {{console-user-password}}
       GITHUB_TOKEN: {{github-access-token}}
       CONSOLE_ADDRESS: "console-db.cf-dev.io"
      # on_failure:
      #   put: send-email
      #   params:
      #     subject_text: "BOSH Deploy ${BUILD_PIPELINE_NAME}/${BUILD_JOB_NAME}/${BUILD_NAME} failed!"
      #     body_text: "BOSH Deploy build was failed: ${ATC_EXTERNAL_URL}/teams/main/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}"
      # on_success:
      #   put: send-email
      #   params:
      #     subject_text: "BOSH Deploy ${BUILD_PIPELINE_NAME}/${BUILD_JOB_NAME}/${BUILD_NAME} successful"
      #     body_text: "BOSH Deploy build was successful: ${ATC_EXTERNAL_URL}/teams/main/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}"
 
- name: remove-app-db
  plan:
  - get: stratos-ui
    passed: [run-e2e-on-db]
    trigger: true
  - do:
    - task: remove-app-db
      timeout: 2h
      file:  stratos-ui/deploy/ci/tasks/cf-deploy/cf-delete-app.yml
      params:
       CF_API_URL: {{cf-api-url}}
       CF_USER: {{cf-admin-user}}
       CF_PASSWORD: {{cf-admin-password}}
       CF_ORG: {{cf-org}}
       CF_SPACE: {{cf-space}}
       APP_NAME: "console-db"