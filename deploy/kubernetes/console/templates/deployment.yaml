apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: hsc-encryption-key-volume
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Mi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: hsc-upgrade-volume
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Mi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
 name: postgres-volume
spec:
 accessModes:
   - ReadWriteMany
 resources:
   requests:
     storage: 2Gi
---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: console-secret
data:
  stolon: {{ .Values.dbPassword | b64enc }}
  pgsql-password: {{ .Values.dbPassword | b64enc }}
  console-cert-key: {{ .Files.Get "ssl/console.key" | b64enc }}
  console-cert: {{ .Files.Get "ssl/console.crt" | b64enc }}
---
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: preflight-job
  name: preflight-job
spec:
 template:
     metadata:
       labels:
         app: console
         job: preflight
     spec:
       containers:
         - env:
           - name: UPGRADE_VOLUME
             value: hsc-upgrade-volume
           - name: UPGRADE_LOCK_FILENAME
             value: upgrade.lock
           - name: ENCRYPTION_KEY_VOLUME
             value: hsc-encryption-key-volume
           - name: ENCRYPTION_KEY_FILENAME
             value: key
           image: {{.Values.dockerRegistry}}/{{.Values.dockerOrg}}/{{.Values.images.preflight}}:{{.Values.consoleVersion}}
           name: preflight-job
           volumeMounts:
           - mountPath: /hsc-upgrade-volume
             name: hsc-upgrade-volume
           - mountPath: /hsc-encryption-key-volume
             name: hsc-encryption-key-volume
       restartPolicy: Never
       volumes:
       - name: hsc-upgrade-volume
         persistentVolumeClaim:
           claimName: hsc-upgrade-volume
       - name: hsc-encryption-key-volume
         persistentVolumeClaim:
           claimName: hsc-encryption-key-volume
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: console
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: console
    spec:
      containers:
      - image: {{.Values.dockerRegistry}}/{{.Values.dockerOrg}}/{{.Values.images.console}}:{{.Values.consoleVersion}}
        name: ui
        env:
        - name: UAA_ENDPOINT
          value: http://console-uaa-int:8080
        volumeMounts:
        - mountPath: /etc/secrets/
          name: console-secret
          readOnly: true
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        - containerPort: 443
          name: https
          protocol: TCP
      - image: {{.Values.dockerRegistry}}/{{.Values.dockerOrg}}/{{.Values.images.proxy}}:{{.Values.consoleVersion}}
        name: proxy
        env:
        - name: PGSQL_USER
          value: console
        - name: PGSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: console-secret
              key: pgsql-password
        - name: PGSQL_DATABASE
          value: console-db
        - name: PGSQL_HOST
          value: console-postgres-int
        - name: PGSQL_PORT
          value: "5432"
        - name: PGSQL_CONNECT_TIMEOUT_IN_SECS
          value: "100"
        - name: PGSQL_SSL_MODE
          value: disable
        - name: HTTP_CONNECTION_TIMEOUT_IN_SECS
          value: "10"
        - name: HTTP_CLIENT_TIMEOUT_IN_SECS
          value: "20"
        - name: SKIP_TLS_VERIFICATION
          value: "false"
        - name: CONSOLE_PROXY_TLS_ADDRESS
          value: :3003
        - name: CONSOLE_CLIENT
          value: console
        - name: HCE_CLIENT
          value: hce
        - name: HSM_CLIENT
          value: hsm
        - name: HCP_CLIENT
          value: hcp
        - name: CF_CLIENT
          value: cf
        - name: ALLOWED_ORIGINS
          value: https://localhost
        - name: ENCRYPTION_KEY_VOLUME
          value: hsc-encryption-key-volume
        - name: ENCRYPTION_KEY_FILENAME
          value: key
        - name: HTTP_PROXY
        - name: HTTPS_PROXY
        - name: NO_PROXY
        - name: FTP_PROXY
        - name: SOCKS_PROXY
        - name: UAA_ENDPOINT
          value: http://console-uaa-int:8080
        ports:
        - containerPort: 3003
          name: proxy
          protocol: TCP
        volumeMounts:
        - mountPath: /hsc-upgrade-volume
          name: hsc-upgrade-volume
        - mountPath: /hsc-encryption-key-volume
          name: hsc-encryption-key-volume
        - mountPath: /etc/secrets/
          name: console-secret
          readOnly: true
      volumes:
      - name: postgres-volume
        persistentVolumeClaim:
          claimName: postgres-volume
      - name: hsc-upgrade-volume
        persistentVolumeClaim:
          claimName: hsc-upgrade-volume
      - name: hsc-encryption-key-volume
        persistentVolumeClaim:
          claimName: hsc-encryption-key-volume
      - name: console-secret
        secret:
          secretName: console-secret
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: console-postgres
    spec:
      containers:
      - image: {{.Values.dockerRegistry}}/{{.Values.dockerOrg}}/{{.Values.images.postgres}}:{{.Values.consoleVersion}}
        name: postgres
        env:
        - name: POSTGRES_USER
          value: postgres
        - name: POSTGRES_PASSWORD_FILE
          value: /etc/secrets/stolon
        - name: PGDATA
          value: /stolon-data/postgres
        - name: HTTP_PROXY
        - name: HTTPS_PROXY
        - name: FTP_PROXY
        - name: SOCKS_PROXY
        volumeMounts:
        - mountPath: /stolon-data
          name: postgres-volume
        - mountPath: /etc/secrets/
          name: console-secret
          readOnly: true
        ports:
        - containerPort: 5432
          name: postgres
          protocol: TCP
      volumes:
      - name: postgres-volume
        persistentVolumeClaim:
          claimName: postgres-volume
      - name: hsc-encryption-key-volume
        persistentVolumeClaim:
          claimName: hsc-encryption-key-volume
      - name: console-secret
        secret:
          secretName: console-secret
---
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: postflight-job
  name: postflight-job
spec:
 template:
     metadata:
       labels:
         app: console
         job: postflight
     spec:
       containers:
        - env:
          - name: PGSQL_HOST
            value: console-postgres-int
          - name: PGSQL_PORT
            value: "5432"
          - name: POSTGRES_USER
            value: postgres
          - name: POSTGRES_PASSWORD_FILE
            value: /etc/secrets/stolon
          - name: PGSQL_DATABASE
            value: console-db
          - name: PGSQL_USER
            value: console
          - name: PGSQL_PASSWORDFILE
            value: /etc/secrets/pgsql-password
          - name: PGSQL_SSL_MODE
            value: disable
          - name: PGCONNECT_TIMEOUT
            value: "10"
          - name: UPGRADE_VOLUME
            value: hsc-upgrade-volume
          - name: UPGRADE_LOCK_FILENAME
            value: upgrade.lock
          - name: HTTP_PROXY
          - name: HTTPS_PROXY
          - name: NO_PROXY
          - name: FTP_PROXY
          - name: SOCKS_PROXY
          image: {{.Values.dockerRegistry}}/{{.Values.dockerOrg}}/{{.Values.images.postflight}}:{{.Values.consoleVersion}}
          name: postflight-job
          volumeMounts:
          - mountPath: /hsc-upgrade-volume
            name: hsc-upgrade-volume
          - mountPath: /etc/secrets/
            name: console-secret
       restartPolicy: OnFailure
       volumes:
       - name: hsc-upgrade-volume
         persistentVolumeClaim:
           claimName: hsc-upgrade-volume
       - name: console-secret
         secret:
           secretName: console-secret
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: uaa
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: console-uaa
    spec:
      containers:
      - image: susetest/uaa:latest
        name: console-identity
        ports:
        - containerPort: 8080
          name: uaa
          protocol: TCP
      volumes:
      - name: postgres-volume
        persistentVolumeClaim:
          claimName: postgres-volume
      - name: hsc-encryption-key-volume
        persistentVolumeClaim:
          claimName: hsc-encryption-key-volume
      - name: console-secret
        secret:
          secretName: console-secret

