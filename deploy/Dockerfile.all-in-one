# Docker build for all-in-one Stratos
# ---------------------------------------------------------------------------------------------------
FROM splatform/stratos-bk-build-base:leap15_1 as jetstream-builder

# Ensure that we copy the custom-src folder
COPY --chown=stratos:users . ./
COPY --chown=stratos:users deploy/tools/generate_cert.sh generate_cert.sh
COPY --chown=stratos:users deploy/all-in-one/config.all-in-one.properties config.properties

ARG USE_PREBUILT_UI

USER stratos
RUN node --version
RUN deploy/all-in-one/src-build.sh

# Generate dev-certs
RUN CERTS_PATH=/home/stratos/dev-certs ./generate_cert.sh

# ---------------------------------------------------------------------------------------------------
# Final AIO Container
# ---------------------------------------------------------------------------------------------------

FROM splatform/stratos-bk-base:leap15_1
ARG CANARY_BUILD

COPY --from=jetstream-builder /home/stratos/deploy/db /src/deploy/db
COPY --from=jetstream-builder /home/stratos/dev-certs /srv/dev-certs
COPY --from=jetstream-builder /home/stratos/ui /srv/ui
COPY --from=jetstream-builder /home/stratos/jetstream /srv/jetstream
RUN chmod +x /srv/jetstream
COPY --from=jetstream-builder /home/stratos/config.properties /srv/config.properties

# User Invite templates
COPY --from=jetstream-builder /home/stratos/src/jetstream/templates /srv/templates

# Enable persistence features if canary build flag is set
RUN if [ "x$CANARY_BUILD" != "x" ] ; then printf "\nFORCE_ENABLE_PERSISTENCE_FEATURES=true\n" >> /srv/config.properties ; fi

# Enable tech preview features if canary build flag is set
RUN if [ "x$CANARY_BUILD" != "x" ] ; then printf "\nENABLE_TECH_PREVIEW=true\n" >> /srv/config.properties ; fi

EXPOSE 443

# Add a vcap user for CF Eirini compatibility
RUN useradd -M -U -u 2000 vcap
RUN usermod -aG users vcap

# ensure that the /srv folder is in the users group so that the vcap user can write to it
RUN chgrp users /srv

# Allow the jetstream executable to bind to 443 regardless of whether we are running as root
RUN setcap 'cap_net_bind_service=+ep' /srv/jetstream

# Need to be root to bind to port 443 (We can remove this once validated no longer required)
USER root

ENTRYPOINT ["./jetstream"]