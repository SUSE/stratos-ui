/* DO NOT EDIT: This code has been generated by the cf-dotnet-sdk-builder */

(function () {
  'use strict';

  angular
    .module('cloud-foundry.api')
    .run(registerApi);

  registerApi.$inject = [
    '$http',
    'app.api.apiManager'
  ];

  function registerApi($http, apiManager) {
    apiManager.register('cloud-foundry.api.Blobstores', new BlobstoresApi($http));
  }

  function BlobstoresApi($http) {
    this.$http = $http;
  }

  /* eslint-disable camelcase */
  angular.extend(BlobstoresApi.prototype, {

   /*
    * Delete all blobs in the Buildpack cache blobstore
    * This endpoint will delete all of the existing buildpack caches in
    * the blobstore. The buildpack cache is used during staging by buildpacks
    * as a way to cache certain resources, e.g. downloaded Ruby gems. An admin
    * who wanted to decrease the size of their blobstore could use this endpoint
    * to delete unnecessary blobs.
    * For detailed information, see online documentation at: http://apidocs.cloudfoundry.org/237/blobstores/delete_all_blobs_in_the_buildpack_cache_blobstore.html
    */
    DeleteAllBlobsInBuildpackCacheBlobstore: function (params, httpConfigOptions) {
      var config = {};
      config.params = params;
      config.url = '/pp/v1/proxy/v2/blobstores/buildpack_cache';
      config.method = 'DELETE';

      for (var option in httpConfigOptions) {
        config[option] = httpConfigOptions[option]
      }
      return this.$http(config);
    }

  });
  /* eslint-enable camelcase */

})();
