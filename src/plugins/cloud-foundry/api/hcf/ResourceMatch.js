/* DO NOT EDIT: This code has been generated by the cf-dotnet-sdk-builder */

(function () {
  'use strict';

  angular
    .module('cloud-foundry.api')
    .run(registerApi);

  registerApi.$inject = [
    '$http',
    'apiManager'
  ];

  function registerApi($http, apiManager) {
    apiManager.register('cloud-foundry.api.ResourceMatch', new ResourceMatchApi($http));
  }

  function ResourceMatchApi($http) {
    this.$http = $http;
  }

  /* eslint-disable camelcase */
  angular.extend(ResourceMatchApi.prototype, {

   /*
    * List all matching resources
    * This endpoint matches given resource SHA / file size pairs against the Cloud Controller cache,
    * and reports the subset which describes already existing files.
    * This is usually used to avoid uploading duplicate files when
    * pushing an app which has only been partially changed.
    * Cloud Foundry operators may set minimum / maximum file sizes to match against.
    * If the file size provided is outside this range, it will not be matched against.
    * For detailed information, see online documentation at: http://apidocs.cloudfoundry.org/237/resource_match/list_all_matching_resources.html
    */
    ListAllMatchingResources: function (value, params, httpConfigOptions) {
      var config = {};
      config.params = params;
      config.url = '/pp/v1/proxy/v2/resource_match';
      config.method = 'PUT';
      config.data = value;

      for (var option in httpConfigOptions) {
        if (!httpConfigOptions.hasOwnProperty(option)) { continue; }
        config[option] = httpConfigOptions[option];
      }
      return this.$http(config);
    }

  });
  /* eslint-enable camelcase */

})();
